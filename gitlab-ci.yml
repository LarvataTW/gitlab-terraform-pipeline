image:
  name: "alpine/terragrunt:0.13.5"
  entrypoint: ["/bin/sh", "-c"]

variables:
  AWS_ACCESS_KEY_ID: "access key"
  AWS_SECRET_ACCESS_KEY: "secret key"
  AWS_DEFAULT_REGION: "ap-east-1"
  BASE_URL: https://raw.githubusercontent.com/LarvataTW/gitlab-terraform-pipeline/v0.13.5/
  TF_PLAN: "$CI_PROJECT_DIR/gitlab-tfplan"
  TF_IN_AUTOMATION: "true"
  TF_TERRAGRUNT_ENABLED: "false"
  CICD_APPLY_MODEL: "always"

stages:
  - check
  - deploy

before_script:
  - apk add --no-cache python3 py3-pip bash curl git && pip3 install --upgrade pip && pip3 install awscli
  - |
    export WORK_DIR=''

    for file in $(git diff-tree --no-commit-id --name-only -r $CI_COMMIT_SHA..$CI_COMMIT_BEFORE_SHA);
    do
      f=$(basename $file)
      if [[ "${f: -3}" == ".tf" ]]
      then
        export WORK_DIR=`dirname $file`
      fi
      [ -z $WORK_DIR ] && echo "$CI_COMMIT_SHA: no *.tf files changed" || echo "$CI_COMMIT_SHA: $WORK_DIR"
    done

    if [ $TF_TERRAGRUNT_ENABLED == "true" ];
    then
      export TERRAFORM=terragrunt
    else
      export TERRAFORM=terraform
    fi

    pwd

    if [ "$WORK_DIR" != "" ];
    then
      env
      cd $WORK_DIR;
      pwd
      git submodule init
      git submodule update
      $TERRAFORM init -input=false
    fi

    env

plan:
  stage: check
  only:
    - master
    - develop
  script:
    - |
      if [ "$WORK_DIR" != "" ];
      then
        git show;
        $TERRAFORM plan -out=$TF_PLAN -input=false;
      fi
  dependencies:
    - lint
  artifacts:
    paths:
      - "$TF_PLAN"
    expire_in: '3 days'

apply:
  stage: deploy
  when: manual
  only:
    - master
    - develop
  script:
    - |
      if [ -f $TF_PLAN ];
      then
        $TERRAFORM apply -input=false $TF_PLAN;
        $TERRAFORM show;
        $TERRAFORM output
      fi
  dependencies:
    - plan
